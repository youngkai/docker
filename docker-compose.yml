version: "3"
 
services:
  nginx:
     image: nginx:latest
     restart: always
     container_name: nginx
     volumes:
      - "./www:/www"
      - "./nginx/conf/nginx.conf:/etc/nginx/nginx.conf"
      - "./nginx/conf.d:/etc/nginx/conf.d"
      - "./nginx/logs:/var/log/nginx"
      - "./nginx/conf:/etc/nginx/conf"
     ports:
      - "80:80"
     depends_on:
      - php
      - mysql
      - redis
     networks:
      docker_composer_net:
       aliases:
         - nginx
  php:
    build: 
      context: "php"
    restart: always
    ports:
      - "9000:9000"
    container_name: php
    volumes:
      - "./www:/www"
      - "./php/php-fpm.d/www.conf:/opt/bitnami/php/etc/php-fpm.d/www.conf"
    depends_on: 
      - redis  
      - mysql
    networks:
     docker_composer_net:
        aliases:
          - php
  mysql:
       image: mysql:latest
       restart: always
       container_name: mysql
       volumes:
        - "./mysql/conf:/etc/mysql/conf.d"
        - "./mysql/logs:/logs"
        - "./mysql/data:/var/lib/mysql"
       ports:
        - "3306:3306"
       command: [
        '--default-authentication-plugin=mysql_native_password',
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci',
       ]
       environment:
        MYSQL_ROOT_PASSWORD: "root"
       networks:
        docker_composer_net:
         aliases:
           - mysql
  redis:
    image: "redis:latest"
    restart: always
    command: redis-server --requirepass 000000
    container_name: "redis"
    ports:
      - "6379:6379"
    networks:
      docker_composer_net:
        aliases:
          - "redis"       
networks:
  docker_composer_net: